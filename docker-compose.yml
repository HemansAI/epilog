version: '3.9'
services:
  es01:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.15.0'
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02
      - 'cluster.initial_master_nodes=es01,es02'
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms1024m -Xmx1024m
      - xpack.security.enabled=true
      - 'ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - 'data_es01:/usr/share/elasticsearch/data'
    ports:
      - '9200:9200'
    networks:
      - elastic


  es02:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.15.0'
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01
      - 'cluster.initial_master_nodes=es01,es02'
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms1024m -Xmx1024m
      - xpack.security.enabled=true
      - 'ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - 'data_es02:/usr/share/elasticsearch/data'
    networks:
      - elastic


  kib01:
    image: 'docker.elastic.co/kibana/kibana:7.15.0'
    container_name: kib01
    ports:
      - '5601:5601'
    environment:
      - 'ELASTICSEARCH_URL=http://es01:9200'
      - 'ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME}'
      - 'ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}'
      - 'ELASTICSEARCH_HOSTS=["http://es01:9200","http://es02:9200"]'
    networks:
      - elastic
    depends_on:
      - es01
      - es02


  filebeat:
    image: 'docker.elastic.co/beats/filebeat:7.15.0'
    command:
      - '--strict.perms=false'
    user: root
    volumes:
      - './filebeat.yml:/usr/share/filebeat/filebeat.yml:ro'
      - '/var/lib/docker:/var/lib/docker:ro'
      - '/var/run/docker.sock:/var/run/docker.sock'
    env_file:
      - .env
    networks:
      - elastic
    depends_on:
      - elasticsearch
      - kibana


  app:
    build: .
    entrypoint:
      - /bin/sh
      - '-c'
    command:
      - |
        ./scripts/wait_for.sh
        ./scripts/purge_logs.sh
        python3.10 -m epilog.emitter
    ports:
      - '8001:8001'
    networks:
      - elastic
    env_file:
      - .env
    depends_on:
      - es01
      - es02
      - filebeat
      - kibana


  caddy:
    image: 'caddy:2-alpine'
    container_name: caddy
    env_file:
      - .env
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - './Caddyfile:/etc/caddy/Caddyfile'
      - './data/caddy_data:/data'
      - './data/caddy_config:/config'
      - './scripts:/scripts'
    networks:
      - elastic
    healthcheck:
      test: ../scripts/health_check.sh
      interval: 20s
      timeout: 10s
      start_period: 10s
      retries: 3
    depends_on:
      - es0
      - es1
      - filebeat
      - kibana
      - app


volumes:
  data_es01: null
  data_es02: null

  
networks:
  elastic:
    driver: bridge
